//Punto 1

//Matrices: Realice una función que lea una matriz de números enteros de NxM y calcule el promedio de cada fila y cada columna.


                int[,] matrizOriginal = new int[6, 6];
                int[,] matrizCambiada = new int[6,6];

                matrizOriginal[0,0] = 2;
                matrizOriginal[0, 1] = 3;
                matrizOriginal[0, 2] = 1;
                matrizOriginal[0, 3] = 5;
                matrizOriginal[0, 4] = 0;
                matrizOriginal[0, 5] = 3;
                matrizOriginal[1, 0] = 1;
                matrizOriginal[1, 1] = 2;
                matrizOriginal[1, 2] = 1;
                matrizOriginal[1, 3] = 2;
                matrizOriginal[1, 4] = 6;
                matrizOriginal[1, 5] = 6;
                matrizOriginal[2, 0] = 4;
                matrizOriginal[2, 1] = 6;
                matrizOriginal[2, 2] = 9;
                matrizOriginal[2, 3] = 3;
                matrizOriginal[2, 4] = 1;
                matrizOriginal[2, 5] = 5;
                matrizOriginal[3, 0] = 2;
                matrizOriginal[3, 1] = 8;
                matrizOriginal[3, 2] = 4;
                matrizOriginal[3, 3] = 4;
                matrizOriginal[3, 4] = 2;
                matrizOriginal[3, 5] = 1;
                matrizOriginal[4, 0] = 7;
                matrizOriginal[4, 1] = 1;
                matrizOriginal[4, 2] = 2;
                matrizOriginal[4, 3] = 6;
                matrizOriginal[4, 4] = 7;
                matrizOriginal[4, 5] = 3;

                Console.WriteLine($"Matriz Original");
                Console.WriteLine($"{matrizOriginal[0, 0]} | {matrizOriginal[0, 1]} | {matrizOriginal[0, 2]} | {matrizOriginal[0, 3]} | {matrizOriginal[0, 4]} | {matrizOriginal[0, 5]}");
                Console.WriteLine($"{matrizOriginal[1, 0]} | {matrizOriginal[1, 1]} | {matrizOriginal[1, 2]} | {matrizOriginal[1, 3]} | {matrizOriginal[1, 4]} | {matrizOriginal[1, 5]}");
                Console.WriteLine($"{matrizOriginal[2, 0]} | {matrizOriginal[2, 1]} | {matrizOriginal[2, 2]} | {matrizOriginal[2, 3]} | {matrizOriginal[2, 4]} | {matrizOriginal[2, 5]}");
                Console.WriteLine($"{matrizOriginal[3, 0]} | {matrizOriginal[3, 1]} | {matrizOriginal[3, 2]} | {matrizOriginal[3, 3]} | {matrizOriginal[3, 4]} | {matrizOriginal[3, 5]}");
                Console.WriteLine($"{matrizOriginal[4, 0]} | {matrizOriginal[4, 1]} | {matrizOriginal[4, 2]} | {matrizOriginal[4, 3]} | {matrizOriginal[4, 4]} | {matrizOriginal[4, 5]}");

                int filas = matrizOriginal.GetLength(0);
                int columnas = matrizOriginal.GetLength(1);

                for (int i = 0; i < filas; i++)
                {
                    for (int j = 0; j < columnas; j++)
                    {
                        matrizCambiada[i, filas - 1 -  j] = matrizOriginal[i, j];
                    }
                }

                Console.WriteLine($"Matriz Cambiada");
                Console.WriteLine($"{matrizCambiada[0, 0]} | {matrizCambiada[0, 1]} | {matrizCambiada[0, 2]} | {matrizCambiada[0, 3]} | {matrizCambiada[0, 4]} | {matrizCambiada[0, 5]}");
                Console.WriteLine($"{matrizCambiada[1, 0]} | {matrizCambiada[1, 1]} | {matrizCambiada[1, 2]} | {matrizCambiada[1, 3]} | {matrizCambiada[1, 4]} | {matrizCambiada[1, 5]}");
                Console.WriteLine($"{matrizCambiada[2, 0]} | {matrizCambiada[2, 1]} | {matrizCambiada[2, 2]} | {matrizCambiada[2, 3]} | {matrizCambiada[2, 4]} | {matrizCambiada[2, 5]}");
                Console.WriteLine($"{matrizCambiada[3, 0]} | {matrizCambiada[3, 1]} | {matrizCambiada[3, 2]} | {matrizCambiada[3, 3]} | {matrizCambiada[3, 4]} | {matrizCambiada[3, 5]}");
                Console.WriteLine($"{matrizCambiada[4, 0]} | {matrizCambiada[4, 1]} | {matrizCambiada[4, 2]} | {matrizCambiada[4, 3]} | {matrizCambiada[4, 4]} | {matrizCambiada[4, 5]}");



//Cadena: Realizar una función que calcule si una cadena es palindroma.

Console.WriteLine("Esriba una palabra en minusculas");
string palabra = Console.ReadLine();
char[] palabraChars = new char[palabra.Length];
char[] palindromo = new char[palabra.Length];

for (int i = 0; i < palabra.Length; i++)
{
    palabraChars[i] = palabra[i];
}
for (int i = 0; i < palabraChars.Length; i++)
{
    if (i == 0)
    {
        palindromo[i] = palabraChars[palabraChars.Length - 1];
    }
    else
    {
        palindromo[i] = palabraChars[palabraChars.Length - i - 1];
    }

}

string palindromoFin = new string(palindromo);

if (palabra == palindromoFin)
{
    Console.WriteLine("La palabra es un palindromo");
}
else
{
    Console.WriteLine("La palabra no es palindromo");
}


//String (Cadena de char): Dada una matriz nxm de caracteres, elimine las vocales de la matriz y reemplacelas con una x,


